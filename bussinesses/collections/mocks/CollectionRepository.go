// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	collections "gofilm/bussinesses/collections"

	mock "github.com/stretchr/testify/mock"
)

// CollectionRepository is an autogenerated mock type for the CollectionRepository type
type CollectionRepository struct {
	mock.Mock
}

// GetCollection provides a mock function with given fields: userID
func (_m *CollectionRepository) GetCollection(userID int) (*collections.Collection, error) {
	ret := _m.Called(userID)

	var r0 *collections.Collection
	if rf, ok := ret.Get(0).(func(int) *collections.Collection); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*collections.Collection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreFilm provides a mock function with given fields: userID, collection
func (_m *CollectionRepository) StoreFilm(userID int, collection *collections.Collection) (*collections.Collection, error) {
	ret := _m.Called(userID, collection)

	var r0 *collections.Collection
	if rf, ok := ret.Get(0).(func(int, *collections.Collection) *collections.Collection); ok {
		r0 = rf(userID, collection)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*collections.Collection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, *collections.Collection) error); ok {
		r1 = rf(userID, collection)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
