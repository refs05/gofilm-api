// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	films "gofilm/bussinesses/films"

	mock "github.com/stretchr/testify/mock"
)

// FilmRepository is an autogenerated mock type for the FilmRepository type
type FilmRepository struct {
	mock.Mock
}

// GetFilm provides a mock function with given fields:
func (_m *FilmRepository) GetFilm() (*[]films.Film, error) {
	ret := _m.Called()

	var r0 *[]films.Film
	if rf, ok := ret.Get(0).(func() *[]films.Film); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]films.Film)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFilmByID provides a mock function with given fields: id
func (_m *FilmRepository) GetFilmByID(id int) (*films.Film, error) {
	ret := _m.Called(id)

	var r0 *films.Film
	if rf, ok := ret.Get(0).(func(int) *films.Film); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*films.Film)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreFilm provides a mock function with given fields: film
func (_m *FilmRepository) StoreFilm(film *films.Film) (*films.Film, error) {
	ret := _m.Called(film)

	var r0 *films.Film
	if rf, ok := ret.Get(0).(func(*films.Film) *films.Film); ok {
		r0 = rf(film)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*films.Film)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*films.Film) error); ok {
		r1 = rf(film)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
